{"version":3,"sources":["images/logo.svg","images/icon-hamburger.svg","images/icon-close.svg","images/icon-ok.svg","images/icon-not-ok.svg","contexts/CurrentUserContext.js","utils/api.js","utils/utils.js","components/Header.js","components/Card.js","components/Main.js","hooks/useFormValidation.js","components/FormSubmit.js","components/Form.js","components/FormInputWithError.js","components/Login.js","components/Footer.js","components/Popup.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/ResponseError.js","utils/auth.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","CurrentUserContext","createContext","api","options","this","_baseUrl","baseUrl","_headers","headers","_contentType","res","ok","json","Promise","reject","fetch","then","_handleResponse","data","method","body","JSON","stringify","itemId","authorization","Header","userData","wasResponse","onLogout","useState","isOpen","setOpenState","controlBlockClassName","cn","buttonBackgroundImageStyle","backgroundImage","closeIconPath","hamburgerIconPath","className","src","logoPath","alt","path","to","exact","email","onClick","style","Card","name","link","likes","_id","owner","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","isLiked","some","like","cardLikeButtonClassName","type","aria-label","width","height","fill","xmlns","d","viewBox","stroke","strokeWidth","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","userName","userDescription","about","userAvatar","avatar","map","card","key","useFormValidation","formRef","isSubmitActive","isSubmitValid","setSubmitValidity","useEffect","isFormValid","current","elements","filter","elem","every","validity","valid","FormSubmit","React","memo","submitTitle","loadingTitle","isActive","isClicked","themeModificator","actModificator","disabled","Form","children","title","submitLoadingTitle","onSubmit","isInfoTooltipOpen","formClassName","headingClassName","isSubmitted","setSubmitState","useRef","action","noValidate","e","preventDefault","ref","FormInputWithError","placeholder","minLength","maxLength","value","onChange","inputRef","errorMessage","setErrorMessage","isValid","setValidState","inputClassName","errorClassName","required","autoComplete","target","validationMessage","Login","onLogin","loggedIn","fieldsetClassName","history","useHistory","push","password","setData","handleDataChange","Footer","Popup","onClose","isImageInside","isFormInside","isTooltipInside","popupClassName","containerClassName","handleEscape","evt","document","addEventListener","removeEventListener","onMouseDown","closest","ImagePopup","place","PopupWithForm","EditProfilePopup","onUpdateUser","setName","info","setInfo","EditAvatarPopup","onUpdateAvatar","avatarRef","setAvatar","AddPlacePopup","setPlace","setLink","ConfirmPopup","deletedCard","onConfirmDelete","Register","onRegister","ProtectedRoute","Component","component","props","InfoTooltip","isSuccess","message","backgroundImageStyles","okIconPath","notOkIconPath","notOkMessage","ResponseError","responseError","status","statusText","auth","token","App","isLoading","setLoadingState","setResponseState","setResponseError","contentClassName","responseErrorClassName","all","getUserData","getData","cardsData","setCurrentUser","setCards","catch","err","finally","setLoggedIn","setUserData","tokenCheck","localStorage","getItem","getContent","console","error","setSuccess","infoTooltipMessage","setInfoTooltipMessage","handleNotSuccessResponse","setInfoTooltipState","isEditProfilePopupOpen","setEditProfilePopupState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isImagePopupOpen","setImagePopupState","isConfirmPopupOpen","setConfirmPopupState","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","setSelectedCard","closeAllPopups","selectedCard","handleCardLike","unlikeItem","bind","likeItem","newCard","newCards","cardItem","alert","handleCardDelete","Provider","removeItem","login","setItem","register","saveUserData","saveUserAvatar","saveNewItem","deleteItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94cd9753.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-hamburger.61ad75c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.8cb8761c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-ok.75df9ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-not-ok.db56ee32.svg\";","import { createContext } from \"react\";\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import { apiConfig } from \"./utils\";\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n    this._contentType = options.headers[\"Content-Type\"];\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    return (res.ok) ? res.json() : Promise.reject(res);\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getData() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  saveUserData(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  saveUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  saveNewItem(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  likeItem(itemId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  unlikeItem(itemId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  deleteItem(itemId) {\r\n    return fetch(`${this._baseUrl}/cards/${itemId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n}\r\n\r\nexport const api = new Api(apiConfig);\r\n","// Объект исходных данных пользователя\r\nexport const initialUserData = {\r\n  name: \"Фёдор Конюхов\",\r\n  about: \"Российский путешественник\",\r\n  avatar: \"https://uznayvse.ru/images/celebs/konuhov_medium.jpg\",\r\n  _id: \"01\",\r\n};\r\n\r\n// Массив с данными исходных карточек\r\nexport const initialCardsData = [\r\n  {\r\n    name: \"Алтайский край\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1494791286225-ea86fc957ba7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1947&q=80\",\r\n    owner: {\r\n      name: \"Конюхов\",\r\n      _id: \"01\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ладожское озеро\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1547846218-c982107d30f2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1972&q=80\",\r\n    owner: {\r\n      name: \"Жак-Ив Кусто\",\r\n      _id: \"02\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Гора Нургуш\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1506516493400-bb5e8347bf0e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1955&q=80\",\r\n    owner: {\r\n      name: \"Конюхов\",\r\n      _id: \"01\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Судак, Крым\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1565342403875-07a8dc5ed13c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=80\",\r\n    owner: {\r\n      name: \"Конюхов\",\r\n      _id: \"01\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1551844931-cfcfecb3636f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2034&q=80\",\r\n    owner: {\r\n      name: \"Конюхов\",\r\n      _id: \"01\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Владивосток\",\r\n    link:\r\n      \"https://images.unsplash.com/photo-1563943078-d83d3fb86468?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2134&q=80\",\r\n    owner: {\r\n      name: \"Конюхов\",\r\n      _id: \"01\",\r\n    },\r\n  },\r\n];\r\n\r\n// Объект данных для API\r\nexport const apiConfig = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-15\",\r\n  headers: {\r\n    authorization: \"584f4afd-78a5-47f8-908c-ac61484f6bb9\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const AUTH_BASE_URL = 'https://auth.nomoreparties.co';\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport logoPath from \"../images/logo.svg\";\r\nimport hamburgerIconPath from '../images/icon-hamburger.svg';\r\nimport closeIconPath from '../images/icon-close.svg';\r\n\r\nfunction Header({ userData, wasResponse, onLogout }) {\r\n  // Реализация кнопки-гамбургера. Выбран такой способ, потому что не вижу смысла\r\n  // подключать целую библиотеку react-responsive из-за одной маленькой фичи.\r\n  const [isOpen, setOpenState] = useState(false);\r\n  \r\n  const controlBlockClassName = cn(\r\n    'header__control',\r\n    {'header__control_mobile_hidden': !isOpen}\r\n  );\r\n\r\n  const buttonBackgroundImageStyle = isOpen\r\n    ? {backgroundImage: `url(${closeIconPath})`}\r\n    : {backgroundImage: `url(${hamburgerIconPath})`};\r\n  \r\n  const handleMenuClick = () => setOpenState(!isOpen);\r\n  \r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        className=\"header__logo\"\r\n        src={logoPath}\r\n        alt=\"Логотип проекта 'Место'\"\r\n      />\r\n      {/* \r\n        Сейчас карточки и регистрация у нас расположены на двух разных серверах.\r\n        Из-за этого возможен случай, когда карточки не загрузились, но пользователь может видеть\r\n        свой email и нажать на \"выйти\", если залогинен или гулять по ссылкам \"Регистрация\"/\"Вход\",\r\n        если не залогинен. Если приложение не загрузилось, то уж полностью.\r\n      */}\r\n      {wasResponse && \r\n        <Switch>\r\n          <Route path=\"/sign-in\">\r\n            <Link to=\"/sign-up\" className=\"header__link page__link\">\r\n              Регистрация\r\n            </Link>\r\n          </Route>\r\n          <Route path=\"/sign-up\">\r\n            <Link to=\"/sign-in\" className=\"header__link page__link\">\r\n              Вход\r\n            </Link>\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <div className={controlBlockClassName}>\r\n              <p className=\"header__user-info\">\r\n                {userData.email}\r\n              </p>\r\n              <button className=\"header__button header__button_content_text\" onClick={onLogout}>\r\n                Выйти\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"header__button header__button_content_image\"\r\n              style={buttonBackgroundImageStyle}\r\n              onClick={handleMenuClick}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      }\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({\r\n  name,\r\n  link,\r\n  likes,\r\n  _id,\r\n  owner,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const isOwn = owner._id === currentUser._id;\r\n  const isLiked = likes.some((like) => like._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__button card__button_act_like ${\r\n    isLiked && \"card__button_active\"\r\n  } page__button`;\r\n\r\n  const handleClick = () => {\r\n    onCardClick({ name, link });\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    onCardLike(isLiked, { likes, _id });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    onCardDelete({ _id });\r\n  };\r\n\r\n  return (\r\n    <figure className=\"card\">\r\n      {isOwn && (\r\n        <button\r\n          className=\"card__button card__button_act_delete page__button\"\r\n          type=\"button\"\r\n          aria-label=\"Удалить\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <svg\r\n            width=\"18\"\r\n            height=\"20\"\r\n            fill=\"#fff\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M2.458 18.142c.06.67.61 1.158 1.28 1.158H14.26c.67 0 1.22-.508 1.28-1.158L16.72 \r\n            5.79H1.28l1.178 12.352zM16.72 1.93h-5.14v-.65C11.58.569 11.011 0 10.3 0H7.72C7.01 0 6.44.569 \r\n            6.44 1.28v.65H1.28C.569 1.93 0 2.499 0 3.21c0 .711.569 1.28 1.28 1.28h15.44c.711 0 1.28-.569 \r\n            1.28-1.28 0-.711-.569-1.28-1.28-1.28z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      )}\r\n      <button\r\n        className=\"card__button card__button_act_enlarge-image\"\r\n        type=\"button\"\r\n        aria-label=\"Увеличить\"\r\n        onClick={handleClick}\r\n      >\r\n        <img className=\"card__image\" src={link} alt={`${name}, фотография`} />\r\n      </button>\r\n      <figcaption className=\"card__description\">\r\n        <h2 className=\"card__heading\">{name}</h2>\r\n        <div className=\"card__likes\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            aria-label=\"Нравится\"\r\n            onClick={handleLikeClick}\r\n          >\r\n            <svg\r\n              width=\"20\"\r\n              height=\"18\"\r\n              viewBox=\"-1 -1 23 19\"\r\n              stroke=\"black\"\r\n              strokeWidth=\"1.5\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M19.154 9.338c2.14-2.14 2.14-5.614 0-7.733a5.486 5.486 0 00-7.755 0l-1.038 \r\n              1.06-1.038-1.039C7.183-.535 3.708-.535 1.589 1.605A5.43 5.43 0 000 5.482c0 1.462.572 \r\n              2.84 1.59 3.877l8.771 8.772 8.793-8.793z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <span className=\"card__likes_quantity\">{likes.length}</span>\r\n        </div>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport Card from \"./Card.js\";\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  // Достаём данные пользователя из контекста\r\n  const userData = useContext(CurrentUserContext);\r\n  const userName = userData.name;\r\n  const userDescription = userData.about;\r\n  const userAvatar = userData.avatar;\r\n\r\n  return (\r\n    <main className=\"main page__narrow\">\r\n      <section className=\"profile\">\r\n        <div\r\n          className=\"profile__image\"\r\n          style={{ backgroundImage: `url(${userAvatar})` }}\r\n        >\r\n          <button\r\n            className=\"profile__avatar-button\"\r\n            aria-label=\"Редактировать\"\r\n            type=\"button\"\r\n            onClick={onEditAvatar}\r\n          />\r\n        </div>\r\n        <div className=\"profile__data\">\r\n          <h1 className=\"profile__name\">{userName}</h1>\r\n          <button\r\n            className=\"profile__edit-button page__button\"\r\n            aria-label=\"Редактировать\"\r\n            type=\"button\"\r\n            onClick={onEditProfile}\r\n          />\r\n          <p className=\"profile__profession\">{userDescription}</p>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button page__button\"\r\n          aria-label=\"Добавить\"\r\n          type=\"button\"\r\n          onClick={onAddPlace}\r\n        />\r\n      </section>\r\n      <section className=\"gallery\">\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card._id}\r\n            {...card}\r\n            onCardClick={onCardClick}\r\n            onCardLike={onCardLike}\r\n            onCardDelete={onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useState, useEffect } from 'react';\r\n\r\n\r\n/* Пользовательский хук валидации формы.\r\n  на вход передаётся два параметра:\r\n  - formRef -- ссылка на форму,\r\n  - isSubmitActive -- начальное состояние кнопки отправки формы.\r\n  Хук возвращает состояние кнопки отправки формы после валидации.\r\n*/\r\nfunction useFormValidation ({ formRef, isSubmitActive }) {\r\n  // Стейт-переменная для изменения валидности кнопки отправки формы в зависимости от валидности формы\r\n  const [isSubmitValid, setSubmitValidity] = useState(isSubmitActive);\r\n  \r\n    // Валидация формы\r\n    useEffect(() => {\r\n      const isFormValid = [...formRef.current.elements]\r\n        .filter((elem) => elem.name)\r\n        .every((elem) => elem.validity.valid);\r\n  \r\n      setSubmitValidity(isFormValid);\r\n    });\r\n\r\n    return {\r\n      isSubmitValid\r\n    }\r\n}\r\n\r\nexport default useFormValidation;\r\n","import React from \"react\";\r\nimport cn from 'classnames';\r\n\r\nconst FormSubmit = React.memo(({\r\n    submitTitle,\r\n    loadingTitle,\r\n    isActive,\r\n    isClicked,\r\n    themeModificator,\r\n    actModificator\r\n  }) => {\r\n    const className = cn(\r\n      'form__submit-btn',\r\n      {[`form__submit-btn_theme_${themeModificator}`]: themeModificator},\r\n      {[`form__submit-btn_act_${actModificator}`]: actModificator},\r\n      {'form__submit-btn_unblocked': isActive},\r\n      {'form__submit-btn_blocked': !isActive},\r\n    );\r\n    return (\r\n      <button\r\n        className={className}\r\n        disabled={!isActive}\r\n        type=\"submit\"\r\n      >\r\n        {isClicked ? loadingTitle : submitTitle}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormSubmit;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport cn from 'classnames';\r\nimport useFormValidation from '../hooks/useFormValidation';\r\nimport FormSubmit from \"./FormSubmit\";\r\n\r\nfunction Form ({\r\n  themeModificator,\r\n  actModificator,\r\n  children,\r\n  name,\r\n  title,\r\n  submitTitle,\r\n  submitLoadingTitle,\r\n  isSubmitActive,\r\n  onSubmit,\r\n  isInfoTooltipOpen\r\n}) {\r\n  const formClassName = cn(\r\n    'form',\r\n    {[`form_theme_${themeModificator}`]: themeModificator},\r\n    {[`form_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  const headingClassName = cn(\r\n    'form__heading',\r\n    {[`form__heading_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__heading_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  // Определяем, нажата ли кнопка отправки формы для подстановки загрузочного текста\r\n  const [isSubmitted, setSubmitState] = useState(false);\r\n\r\n  // Определяем форму для валидации\r\n  const formRef = useRef();\r\n\r\n  // Обработчик отправки формы\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitState(true);\r\n    onSubmit();\r\n  };\r\n\r\n  // Для случаев, когда появляется тултип с результатом отправки формы,\r\n  // обнуляем стейт кнопки отправки формы, чтобы убрать прелоадер.\r\n  useEffect(() => {\r\n    setSubmitState(false);\r\n  }, [isInfoTooltipOpen]);\r\n\r\n  // Используем пользовательский хук валидации формы\r\n  let { isSubmitValid } = useFormValidation({ formRef, isSubmitActive });\r\n\r\n  return (\r\n    <form\r\n      action=\"#\"\r\n      className={formClassName}\r\n      name={name}\r\n      method=\"GET\"\r\n      noValidate\r\n      onSubmit={handleSubmit}\r\n      ref={formRef}\r\n    >\r\n      {title && <h2 className={headingClassName}>{title}</h2>}\r\n      {children}\r\n      <FormSubmit\r\n        themeModificator={themeModificator}\r\n        actModificator={actModificator}\r\n        submitTitle={submitTitle}\r\n        loadingTitle={submitLoadingTitle}\r\n        isActive={isSubmitValid}\r\n        isClicked={isSubmitted}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport cn from 'classnames';\r\n\r\nconst FormInputWithError = React.memo(\r\n  ({\r\n    name,\r\n    placeholder,\r\n    type,\r\n    minLength,\r\n    maxLength,\r\n    value,\r\n    onChange,\r\n    inputRef,\r\n    themeModificator,\r\n    actModificator\r\n  }) => {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [isValid, setValidState] = useState(true);\r\n\r\n    const handleChange = (e) => {\r\n      setErrorMessage(e.target.validationMessage);\r\n      onChange(e);\r\n      setValidState(e.target.validity.valid);\r\n    }\r\n\r\n    let inputClassName = cn(\r\n      'form__input',\r\n      {[`form__input_theme_${themeModificator}`]: themeModificator},\r\n      {[`form__input_act_${actModificator}`]: actModificator},\r\n      {'form__input_valid': isValid},\r\n      {'form__input_invalid': !isValid},\r\n    );\r\n\r\n    const errorClassName = cn(\r\n      'form__error',\r\n      {[`form__error_in_${name}`]: name},\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          className={inputClassName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          required\r\n          autoComplete=\"off\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          ref={inputRef}\r\n        />\r\n        <span className={errorClassName}>\r\n          {errorMessage}\r\n        </span>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormInputWithError;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport cn from 'classnames';\r\nimport Form from './Form';\r\nimport FormInputWithError from './FormInputWithError';\r\n\r\nfunction Login ({ onLogin, loggedIn, isInfoTooltipOpen }) {\r\n  const themeModificator = \"dark\";\r\n  const actModificator = \"identification\";\r\n\r\n  const fieldsetClassName = cn(\r\n    'form__fieldset',\r\n    {[`form__fieldset_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__fieldset_act_${actModificator}`]: actModificator},\r\n  );\r\n  \r\n  // При загрузке страницы, если пользователь залогинен, переадрисовываем его на главную\r\n  // Сделала так, чтобы была возможность зайти на гипотетический другие (кроме главной)\r\n  // страницы из адресной строки.\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleDataChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onLogin(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        themeModificator={themeModificator}\r\n        actModificator={actModificator}\r\n        children\r\n        name=\"login\"\r\n        title=\"Вход\"\r\n        submitTitle=\"Войти\"\r\n        submitLoadingTitle=\"Вход...\"\r\n        isSubmitActive={false}\r\n        onSubmit={handleSubmit}\r\n        isInfoTooltipOpen={isInfoTooltipOpen}\r\n      >\r\n        <fieldset className={fieldsetClassName}>\r\n          <FormInputWithError\r\n            themeModificator={themeModificator}\r\n            actModificator={actModificator}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email}\r\n            onChange={handleDataChange}\r\n          />\r\n          <FormInputWithError\r\n            themeModificator={themeModificator}\r\n            actModificator={actModificator}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            minLength=\"6\"\r\n            maxLength=\"50\"\r\n            value={data.password}\r\n            onChange={handleDataChange}\r\n          />\r\n        </fieldset>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport cn from 'classnames';\r\n\r\nfunction Footer({ loggedIn }) {\r\n  const className = cn('footer', 'page__narrow', {'footer_hidden': !loggedIn});\r\n  return (\r\n    <footer className={className}>\r\n      <p className=\"footer__copyright\">&copy;&nbsp;2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\nimport cn from 'classnames';\r\n\r\nfunction Popup ({\r\n  children,\r\n  name=null,\r\n  onClose,\r\n  isImageInside=false,\r\n  isFormInside=false,\r\n  isTooltipInside=false\r\n}) {\r\n  const popupClassName = cn(\r\n    'popup',\r\n    'popup_active',\r\n    {'popup_with_form': isFormInside},\r\n    {'popup_with_image': isImageInside},\r\n    {'popup_with_tooltip': isTooltipInside}\r\n  );\r\n\r\n  const containerClassName = cn(\r\n    'popup__container',\r\n    {'popup__container_with_image': isImageInside},\r\n    {'popup__container_with_form': isFormInside},\r\n    {'popup__container_with_tooltip': isTooltipInside}\r\n  );\r\n\r\n  // Обработчик клика по оверлею\r\n  const handleOverlayPopupClick = (evt) => {\r\n    if (!evt.target.closest(\".popup__container\")) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Обработчик нажатия клавиши \"Escape\"\r\n  const handleEscape = (evt) => {\r\n    if (evt.key === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Используем хук эффекта для закрытия модалки по нажатию клавиши \"Escape\"\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", handleEscape);\r\n    return () => {\r\n      document.body.removeEventListener(\"keydown\", handleEscape);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={popupClassName}\r\n      onMouseDown={handleOverlayPopupClick}\r\n    >\r\n      <div className={containerClassName}>\r\n        {children}\r\n        <button\r\n          className=\"popup__close-button page__button\"\r\n          type=\"button\"\r\n          aria-label=\"Закрыть\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport Popup from \"./Popup\";\r\n\r\nfunction ImagePopup({ place, onClose }) {\r\n  return (\r\n    <Popup\r\n      name='enlarge-image'\r\n      isImageInside={true}\r\n      onClose={onClose}\r\n    >\r\n      <figure className=\"popup__image-container\">\r\n        <img\r\n          className=\"popup__image\"\r\n          src={place.link}\r\n          alt={`${place.name}, фотография`}\r\n        />\r\n        <figcaption>\r\n          <p className=\"popup__image-caption\">{`${place.name}, фотография`}</p>\r\n          <button\r\n            className=\"popup__close-button page__button\"\r\n            type=\"button\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={onClose}\r\n          />\r\n        </figcaption>\r\n      </figure>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from \"react\";\r\nimport Form from './Form';\r\nimport Popup from \"./Popup\";\r\n\r\nfunction PopupWithForm({\r\n  title,\r\n  onClose,\r\n  name,\r\n  onSubmit,\r\n  submitTitle,\r\n  submitLoadingTitle,\r\n  isSubmitActive,\r\n  children,\r\n  themeModificator,\r\n  actModificator,\r\n}) {\r\n  return (\r\n    <Popup\r\n      name={name}\r\n      onClose={onClose}\r\n      isFormInside={true}\r\n    >\r\n      <Form\r\n        themeModificator={themeModificator}\r\n        actModificator={actModificator}\r\n        submitTitle={submitTitle}\r\n        submitLoadingTitle={submitLoadingTitle}\r\n        isSubmitActive={isSubmitActive}\r\n        onSubmit={onSubmit}\r\n        name={name}\r\n        title={title}\r\n      >\r\n        {children}\r\n      </Form>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useContext } from \"react\";\r\nimport cn from 'classnames';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport FormInputWithError from \"./FormInputWithError\";\r\n\r\nfunction EditProfilePopup({ onClose, onUpdateUser }) {\r\n  const themeModificator = \"light\";\r\n  const actModificator = \"activity\";\r\n\r\n  const fieldsetClassName = cn(\r\n    'form__fieldset',\r\n    {[`form__fieldset_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__fieldset_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  // Используем контекст для установки начальных значений стейт-переменных для управляемых компонентов\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(currentUser.name);\r\n  const [info, setInfo] = useState(currentUser.about);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleInfoChange = (e) => {\r\n    setInfo(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onUpdateUser({\r\n      name,\r\n      about: info,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit-profile\"\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      submitTitle=\"Сохранить\"\r\n      submitLoadingTitle=\"Сохранение...\"\r\n      isSubmitActive={true}\r\n      themeModificator={themeModificator}\r\n      actModificator={actModificator}\r\n    >\r\n      <fieldset className={fieldsetClassName}>\r\n        <FormInputWithError\r\n          name=\"name\"\r\n          placeholder=\"Имя\"\r\n          type=\"text\"\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          themeModificator={themeModificator}\r\n          actModificator={actModificator}\r\n        />\r\n        <FormInputWithError\r\n          name=\"info\"\r\n          placeholder=\"Профессия\"\r\n          type=\"text\"\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          value={info}\r\n          onChange={handleInfoChange}\r\n          themeModificator={themeModificator}\r\n          actModificator={actModificator}\r\n        />\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef, useState } from \"react\";\r\nimport cn from 'classnames';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport FormInputWithError from \"./FormInputWithError\";\r\n\r\nfunction EditAvatarPopup({ onClose, onUpdateAvatar }) {\r\n  const themeModificator = \"light\";\r\n  const actModificator = \"activity\";\r\n\r\n  const fieldsetClassName = cn(\r\n    'form__fieldset',\r\n    {[`form__fieldset_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__fieldset_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  const avatarRef = useRef();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  const handleAvatarChange = () => {\r\n    setAvatar(avatarRef.current.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onUpdateAvatar({\r\n      avatar: avatar,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Обновить аватар\"\r\n      name=\"edit-avatar\"\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      submitTitle=\"Сохранить\"\r\n      submitLoadingTitle=\"Сохранение...\"\r\n      isSubmitActive={false}\r\n      themeModificator={themeModificator}\r\n      actModificator={actModificator}\r\n    >\r\n      <fieldset className={fieldsetClassName}>\r\n        <FormInputWithError\r\n          name=\"avatar\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          type=\"url\"\r\n          value={avatar}\r\n          inputRef={avatarRef}\r\n          onChange={handleAvatarChange}\r\n          themeModificator={themeModificator}\r\n          actModificator={actModificator}\r\n        />\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from \"react\";\r\nimport cn from 'classnames';\r\nimport FormInputWithError from \"./FormInputWithError\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({ onClose, onAddPlace }) {\r\n  const themeModificator = \"light\";\r\n  const actModificator = \"activity\";\r\n\r\n  const fieldsetClassName = cn(\r\n    'form__fieldset',\r\n    {[`form__fieldset_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__fieldset_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  // Стейт-переменные для управляемых компонентов\r\n  const [place, setPlace] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const handlePlaceChange = (e) => {\r\n    setPlace(e.target.value);\r\n  };\r\n  \r\n  const handleLinkChange = (e) => {\r\n    setLink(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onAddPlace({\r\n      name: place,\r\n      link,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"add-card\"\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      submitTitle=\"Создать\"\r\n      submitLoadingTitle=\"Сохранение...\"\r\n      isSubmitActive={false}\r\n      themeModificator={themeModificator}\r\n      actModificator={actModificator}\r\n    >\r\n      <fieldset className={fieldsetClassName}>\r\n        <FormInputWithError\r\n          name=\"place\"\r\n          placeholder=\"Название\"\r\n          type=\"text\"\r\n          minLength=\"1\"\r\n          maxLength=\"30\"\r\n          value={place}\r\n          onChange={handlePlaceChange}\r\n          themeModificator={themeModificator}\r\n          actModificator={actModificator}\r\n        />\r\n        <FormInputWithError\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          type=\"url\"\r\n          value={link}\r\n          onChange={handleLinkChange}\r\n          themeModificator={themeModificator}\r\n          actModificator={actModificator}\r\n        />\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction ConfirmPopup({ deletedCard, onConfirmDelete, onClose }) {\r\n  const handleSubmit = () => {\r\n    onConfirmDelete(deletedCard);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Вы уверены?\"\r\n      name=\"confirm\"\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      submitTitle=\"Да\"\r\n      submitLoadingTitle=\"Удаление...\"\r\n      isSubmitActive={true}\r\n      themeModificator=\"light\"\r\n      actModificator=\"activity\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ConfirmPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport cn from 'classnames';\r\nimport Form from './Form';\r\nimport FormInputWithError from './FormInputWithError';\r\n\r\nfunction Register ({ onRegister, loggedIn, isInfoTooltipOpen }) {\r\n  const themeModificator = \"dark\";\r\n  const actModificator = \"identification\";\r\n\r\n  const fieldsetClassName = cn(\r\n    'form__fieldset',\r\n    {[`form__fieldset_theme_${themeModificator}`]: themeModificator},\r\n    {[`form__fieldset_act_${actModificator}`]: actModificator},\r\n  );\r\n\r\n  // При загрузке страницы, если пользователь залогинен, переадрисовываем его на главную\r\n  // Сделала так, чтобы была возможность зайти на гипотетический другие (кроме главной)\r\n  // страницы из адресной строки.\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleDataChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onRegister(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        themeModificator={themeModificator}\r\n        actModificator={actModificator}\r\n        children\r\n        name=\"login\"\r\n        title=\"Регистрация\"\r\n        submitTitle=\"Зарегистрироваться\"\r\n        submitLoadingTitle=\"Регистрация...\"\r\n        isSubmitActive={false}\r\n        onSubmit={handleSubmit}\r\n        isInfoTooltipOpen={isInfoTooltipOpen}\r\n      >\r\n        <fieldset className={fieldsetClassName}>\r\n          <FormInputWithError\r\n            themeModificator={themeModificator}\r\n            actModificator={actModificator}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email}\r\n            onChange={handleDataChange}\r\n          />\r\n          <FormInputWithError\r\n            themeModificator={themeModificator}\r\n            actModificator={actModificator}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            minLength=\"6\"\r\n            maxLength=\"50\"\r\n            value={data.password}\r\n            onChange={handleDataChange}\r\n          />\r\n        </fieldset>\r\n      </Form>\r\n      <p className=\"form__paragraph\">\r\n        Уже зарегистрированы?&nbsp;\r\n        <Link to=\"/login\" className=\"form__link page__link\">\r\n          Войти\r\n        </Link>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute ({ component: Component, ...props }) {\r\n  return(\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport Popup from './Popup';\r\nimport okIconPath from '../images/icon-ok.svg';\r\nimport notOkIconPath from '../images/icon-not-ok.svg';\r\n\r\nfunction InfoTooltip ({ isSuccess, message, onClose }) {\r\n  const backgroundImageStyles = isSuccess\r\n    ? {backgroundImage: `url(${okIconPath})`}\r\n    : {backgroundImage: `url(${notOkIconPath})`}\r\n\r\n  const notOkMessage = message ? message : 'Что-то пошло не так! Попробуйте ещё раз.';\r\n  return (\r\n    <Popup\r\n      isTooltipInside={true}\r\n      onClose={onClose}\r\n    >\r\n      <div className=\"popup__tooltip-icon\"\r\n      style={backgroundImageStyles}\r\n      />\r\n      <p className=\"popup__tooltip-paragraph\">\r\n        {isSuccess\r\n          ? 'Вы успешно зарегистрировались!'\r\n          : `${notOkMessage}`\r\n        }\r\n      </p>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\n\r\nfunction ResponseError ({ className, responseError }) {\r\n  return (\r\n    <div className={className}>\r\n      <p className=\"response-error__status\">{responseError.status}</p>\r\n      <p className=\"response-error__text\">{responseError.statusText}</p> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResponseError;\r\n","import { AUTH_BASE_URL } from './utils';\r\n\r\nclass Auth  {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    return (res.ok) ? res.json() : Promise.reject(res);\r\n  }\r\n\r\n  register(data) {\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this._handleResponse);\r\n  }\r\n\r\n  login(data) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this._handleResponse);\r\n  }\r\n\r\n  getContent(token) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(this._handleResponse);\r\n  }\r\n}\r\n\r\nexport const auth = new Auth({ baseUrl: AUTH_BASE_URL });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { api } from \"../utils/api\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Login from \"./Login\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ConfirmPopup from \"./ConfirmPopup\";\r\nimport Register from \"./Register\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport ResponseError from \"./ResponseError\";\r\nimport { auth } from \"../utils/auth\";\r\n\r\nfunction App() {\r\n  // Логика загрузки (показываем/убираем спиннер, отрисовываем ошибку при необходимости)\r\n  const [isLoading, setLoadingState] = useState(true);\r\n\r\n  const [wasResponse, setResponseState] = useState(false);\r\n\r\n  const [responseError, setResponseError] = useState({\r\n    status: '',\r\n    statusText: ''\r\n  });\r\n\r\n  let contentClassName = cn('content', {'content_hidden': !wasResponse});\r\n  let responseErrorClassName = cn('response-error', {'response-error_hidden': wasResponse});\r\n\r\n  // Загрузка пользовательских данных с сервера\r\n  useEffect(() => {\r\n    Promise.all([api.getUserData(), api.getData()])\r\n      .then(([userData, cardsData]) => {\r\n        setCurrentUser(userData);\r\n        setCards(cardsData);\r\n        setResponseState(true);\r\n      })\r\n      .catch((err) => {\r\n        setResponseError({\r\n          status: err.status,\r\n          statusText: err.statusText\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoadingState(false);\r\n      });\r\n  }, []);\r\n\r\n  // Авторизация пользователя\r\n  const history = useHistory();\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const [userData, setUserData] = useState({\r\n    email: ''\r\n  });\r\n\r\n  // При загрузке страницы сразу проверяем, авторизован ли пользователь\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  const tokenCheck = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      auth.getContent(token)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setUserData({email: res.data.email});\r\n            setLoggedIn(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // Здесь ошибку пользователю не выводим, потому что в редких случаях она ему что-то даст.\r\n          // Тот, кому это необходимо, найдёт её в консоли.\r\n          // Вывод ошибки здесь выглядит странно, потому что пользователь даже не поймёт, в чём дело\r\n          // -- зашёл на чсайт, ещё ничего не сделал, а уже ошибка.\r\n          console.error(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  // Стейт-переменная для определения контента тултипа\r\n  const [isSuccess, setSuccess] = useState(true);\r\n  const [infoTooltipMessage, setInfoTooltipMessage] = useState();\r\n\r\n  const handleNotSuccessResponse = () => {\r\n    setSuccess(false);\r\n    setInfoTooltipState(true);\r\n  }\r\n\r\n  const handleRegister = ({ email, password }) => {\r\n    auth.register({ email, password })\r\n      .then((data) => {\r\n        if (data.email) {\r\n          setSuccess(true);\r\n          setInfoTooltipState(true);\r\n          history.push('/sign-in');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.status === 400) {\r\n          setInfoTooltipMessage('Некорректно заполнено одно из полей.');\r\n        }\r\n        handleNotSuccessResponse();\r\n      })\r\n  }\r\n\r\n  const handleLogin = ({ email, password }) => {\r\n    auth.login({ email, password })\r\n      .then((data) => {\r\n        if (data.token) {\r\n          localStorage.setItem('token', data.token);\r\n          setLoggedIn(true);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.status === 401) {\r\n          setInfoTooltipMessage('Некорректно введён email или пароль.')\r\n        } else if (err.status === 400) {\r\n          setInfoTooltipMessage('Не передано одно из полей.')\r\n        }\r\n        handleNotSuccessResponse();\r\n      })\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    setUserData({email: ''});\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  // Логика открытия/закрытия попапов\r\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupState] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupState] = useState(false);\r\n  const [isInfoTooltipOpen, setInfoTooltipState] = useState(false);\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setEditAvatarPopupState(true);\r\n  };\r\n\r\n  const handleEditProfileClick = () => {\r\n    setEditProfilePopupState(true);\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setAddPlacePopupState(true);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    setImagePopupState(true);\r\n  };\r\n\r\n  const closeAllPopups = () => {\r\n    setEditAvatarPopupState(false);\r\n    setEditProfilePopupState(false);\r\n    setAddPlacePopupState(false);\r\n    setImagePopupState(false);\r\n    setConfirmPopupState(false);\r\n  };\r\n  \r\n  const closeInfoTooltip = () => {\r\n    setInfoTooltipState(false);\r\n    setInfoTooltipMessage('');\r\n  }\r\n\r\n  // Стейт-переменные для текущего состояния страницы\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n  });\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  // Обработчики для попапов\r\n  const handleUpdateUser = (userData) => {\r\n    api.saveUserData(userData)\r\n      .then((userData) => {\r\n        setCurrentUser(userData);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  };\r\n\r\n  const handleUpdateAvatar = (data) => {\r\n    api.saveUserAvatar(data)\r\n      .then((userData) => {\r\n        setCurrentUser(userData);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  };\r\n\r\n  const handleAddPlace = (newCard) => {\r\n    api.saveNewItem(newCard)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  };\r\n\r\n  // Обработчики для карточек\r\n  const handleCardLike = (isLiked, card) => {\r\n    const handleLikeClick = isLiked\r\n      ? api.unlikeItem.bind(api)\r\n      : api.likeItem.bind(api);\r\n    handleLikeClick(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((cardItem) =>\r\n          cardItem._id === card._id ? newCard : cardItem\r\n        );\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleCardDelete = (card) => {\r\n    setSelectedCard(card);\r\n    setConfirmPopupState(true);\r\n  };\r\n  \r\n  const handleConfirmDelete = (card) => {\r\n    api.deleteItem(card._id)\r\n    .then(() => {\r\n      const newCards = cards.filter((cardItem) => cardItem._id !== card._id);\r\n      setCards(newCards);\r\n    }).catch((err) => {\r\n      alert(err);\r\n    }).finally(() => {\r\n      closeAllPopups();\r\n    });    \r\n  }\r\n\r\n  // Эта обертка для компонента позволяет передавать дополнительные параметры из замыкания.\r\n  // Без неё пропсы не пробрасывались в Main,а массив карточек раскладывался в Object Object\r\n  const WrappedMain = (props) => {\r\n    return (\r\n      <Main\r\n        {...props}\r\n        cards={cards}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onEditProfile={handleEditProfileClick}\r\n        onCardClick={handleCardClick}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <div className=\"page__container\">\r\n          <Header userData={userData} onLogout={handleLogout} wasResponse={wasResponse} />\r\n          {isLoading ? (\r\n            <div className=\"spinner spinner_visible\" />\r\n          ) : (\r\n            <>\r\n              <div className={contentClassName}>\r\n                <Switch>\r\n                  <Route path=\"/sign-in\">\r\n                    <Login\r\n                      onLogin={handleLogin}\r\n                      isInfoTooltipOpen={isInfoTooltipOpen}\r\n                      loggedIn={loggedIn}\r\n                    />\r\n                  </Route>\r\n                  <Route path=\"/sign-up\">\r\n                    <Register\r\n                      onRegister={handleRegister}\r\n                      isInfoTooltipOpen={isInfoTooltipOpen}\r\n                      loggedIn={loggedIn}\r\n                    />\r\n                  </Route>\r\n                  <ProtectedRoute \r\n                    exact={true}\r\n                    path=\"/\"\r\n                    component={WrappedMain}\r\n                    loggedIn={loggedIn}\r\n                  />\r\n                  <Route>\r\n                    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n              <ResponseError\r\n                className={responseErrorClassName}\r\n                responseError={responseError}\r\n              />\r\n            </>\r\n          )}\r\n          <Footer loggedIn={loggedIn} />\r\n        </div>\r\n        {isEditProfilePopupOpen && (\r\n          <EditProfilePopup\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n        )}\r\n        {isEditAvatarPopupOpen && (\r\n          <EditAvatarPopup\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n        )}\r\n        {isAddPlacePopupOpen && (\r\n          <AddPlacePopup\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlace} />\r\n        )}\r\n        {isImagePopupOpen && (\r\n          <ImagePopup\r\n            place={selectedCard}\r\n            onClose={closeAllPopups} />\r\n        )}\r\n        {isConfirmPopupOpen && (\r\n          <ConfirmPopup\r\n            deletedCard={selectedCard}\r\n            onClose={closeAllPopups}\r\n            onConfirmDelete={handleConfirmDelete}/>\r\n        )}\r\n        {isInfoTooltipOpen && \r\n          <InfoTooltip\r\n            isSuccess={isSuccess}\r\n            message={infoTooltipMessage}\r\n            onClose={closeInfoTooltip}\r\n          />\r\n        }\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}